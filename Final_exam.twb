<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook original-version='18.1' source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Filing Rate' caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
        <calculation class='tableau' formula='2.0' />
        <aliases>
          <alias key='1.0' value='Evictions' />
          <alias key='2.0' value='Filing Rate' />
        </aliases>
        <members>
          <member alias='Evictions' value='1.0' />
          <member alias='Filing Rate' value='2.0' />
        </members>
      </column>
    </datasource>
    <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' inline='true' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Massachusetts Evictions' name='excel-direct.1kmuxsn0gt14z11cs0k6x1jqp3yh'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/rtrah/Downloads/Massachusetts Evictions.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1kmuxsn0gt14z11cs0k6x1jqp3yh' name='Massachusetts Evictions Data' table='[&apos;Massachusetts Evictions Data$&apos;]' type='table'>
          <columns gridOrigin='A1:Z10001:no:A1:Z10001:1' header='yes' lost='0' outcome='1' processed='223276'>
            <column datatype='integer' name='GEOID' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='string' name='name' ordinal='2' />
            <column datatype='string' name='parent-location' ordinal='3' />
            <column datatype='real' name='population' ordinal='4' />
            <column datatype='real' name='poverty-rate' ordinal='5' />
            <column datatype='real' name='pct-renter-occupied' ordinal='6' />
            <column datatype='real' name='median-gross-rent' ordinal='7' />
            <column datatype='real' name='median-household-income' ordinal='8' />
            <column datatype='real' name='median-property-value' ordinal='9' />
            <column datatype='real' name='rent-burden' ordinal='10' />
            <column datatype='real' name='pct-white' ordinal='11' />
            <column datatype='real' name='pct-af-am' ordinal='12' />
            <column datatype='real' name='pct-hispanic' ordinal='13' />
            <column datatype='real' name='pct-am-ind' ordinal='14' />
            <column datatype='real' name='pct-asian' ordinal='15' />
            <column datatype='real' name='pct-nh-pi' ordinal='16' />
            <column datatype='real' name='pct-multiple' ordinal='17' />
            <column datatype='real' name='pct-other' ordinal='18' />
            <column datatype='integer' name='renter-occupied-households' ordinal='19' />
            <column datatype='integer' name='eviction-filings' ordinal='20' />
            <column datatype='integer' name='evictions' ordinal='21' />
            <column datatype='real' name='eviction-rate' ordinal='22' />
            <column datatype='real' name='eviction-filing-rate' ordinal='23' />
            <column datatype='integer' name='imputed' ordinal='24' />
            <column datatype='integer' name='subbed' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GEOID]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent-location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parent-location]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>parent-location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>poverty-rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[poverty-rate]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>poverty-rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-renter-occupied</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-renter-occupied]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-renter-occupied</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median-gross-rent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median-gross-rent]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>median-gross-rent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median-household-income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median-household-income]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>median-household-income</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median-property-value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median-property-value]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>median-property-value</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent-burden</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rent-burden]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>rent-burden</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-white</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-white]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-white</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-af-am</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-af-am]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-af-am</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-hispanic</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-hispanic]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-hispanic</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-am-ind</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-am-ind]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-am-ind</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-asian</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-asian]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-asian</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-nh-pi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-nh-pi]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-nh-pi</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-multiple</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-multiple]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-multiple</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct-other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct-other]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>pct-other</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renter-occupied-households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[renter-occupied-households]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>renter-occupied-households</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eviction-filings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[eviction-filings]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>eviction-filings</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>evictions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[evictions]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>evictions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eviction-rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[eviction-rate]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>eviction-rate</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eviction-filing-rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[eviction-filing-rate]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>eviction-filing-rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imputed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[imputed]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>imputed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subbed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[subbed]</local-name>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias>subbed</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Massachusetts Evictions Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>223276</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percent of evictions for a Single Address ' datatype='real' name='[Calculation_426997542975660032]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([population]/[evictions])/100' />
      </column>
      <column caption='Poverty Rate_cal' datatype='real' name='[Calculation_426997542989082625]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([poverty-rate]/[population])' />
      </column>
      <column caption='Calculated Renter Occupied ' datatype='integer' name='[Calculation_426997543006445570]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [year], [parent-location]: SUM([renter-occupied-households])}' />
      </column>
      <column caption='Percent of evictions based on filed eviction' datatype='real' name='[Calculation_426997543013507075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([evictions]/[eviction-filings])*100' />
      </column>
      <column caption='Geoid' datatype='integer' name='[GEOID]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Eviction-Filing-Rate' datatype='real' name='[eviction-filing-rate]' role='measure' type='quantitative' />
      <column caption='Eviction-Filings' datatype='integer' name='[eviction-filings]' role='measure' type='quantitative' />
      <column caption='Eviction-Rate' datatype='real' name='[eviction-rate]' role='measure' type='quantitative' />
      <column caption='Evictions' datatype='integer' name='[evictions]' role='measure' type='quantitative' />
      <column caption='Imputed' datatype='integer' name='[imputed]' role='measure' type='quantitative' />
      <column caption='Median-Gross-Rent' datatype='real' name='[median-gross-rent]' role='measure' type='quantitative' />
      <column caption='Median-Household-Income' datatype='real' name='[median-household-income]' role='measure' type='quantitative' />
      <column caption='Median-Property-Value' datatype='real' name='[median-property-value]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Pct-Af-Am' datatype='real' name='[pct-af-am]' role='measure' type='quantitative' />
      <column caption='Pct-Am-Ind' datatype='real' name='[pct-am-ind]' role='measure' type='quantitative' />
      <column caption='Pct-Asian' datatype='real' name='[pct-asian]' role='measure' type='quantitative' />
      <column caption='Pct-Hispanic' datatype='real' name='[pct-hispanic]' role='measure' type='quantitative' />
      <column caption='Pct-Multiple' datatype='real' name='[pct-multiple]' role='measure' type='quantitative' />
      <column caption='Pct-Nh-Pi' datatype='real' name='[pct-nh-pi]' role='measure' type='quantitative' />
      <column caption='Pct-Other' datatype='real' name='[pct-other]' role='measure' type='quantitative' />
      <column caption='Pct-Renter-Occupied' datatype='real' name='[pct-renter-occupied]' role='measure' type='quantitative' />
      <column caption='Pct-White' datatype='real' name='[pct-white]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Poverty-Rate' datatype='real' name='[poverty-rate]' role='measure' type='quantitative' />
      <column caption='Rent-Burden' datatype='real' name='[rent-burden]' role='measure' type='quantitative' />
      <column caption='Renter-Occupied-Households' datatype='integer' name='[renter-occupied-households]' role='measure' type='quantitative' />
      <column caption='Subbed' datatype='integer' name='[subbed]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[pct-renter-occupied]' derivation='None' name='[none:pct-renter-occupied:ok]' pivot='key' type='ordinal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Name,Parent-Location,Pct-Renter-Occupied)' hidden='true' name='[Action (Name,Parent-Location,Pct-Renter-Occupied)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[name]' />
          <groupfilter function='level-members' level='[parent-location]' />
          <groupfilter function='level-members' level='[none:pct-renter-occupied:ok]' />
        </groupfilter>
      </group>
      <group name='[no 2017]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='2000' function='range' level='[none:year:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <drill-paths>
        <drill-path name='Parent-Location, Name'>
          <field>[parent-location]</field>
          <field>[name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.206957' group-percentage='0.0573913' measure-ordering='alphabetic' measure-percentage='0.678261' parameter-percentage='0.0573913' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 6' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq' type='datasource'>
        <exclude-sheet name='Sheet 2' />
        <exclude-sheet name='Sheet 3' />
        <exclude-sheet name='Sheet 4' />
        <exclude-sheet name='Sheet 5' />
        <exclude-sheet name='Sheet 6' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 3,Sheet 6' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='18' underline='true'>Massachusetts Evictions KPI </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column caption='Percent of evictions for a Single Address ' datatype='real' name='[Calculation_426997542975660032]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([population]/[evictions])/100' />
            </column>
            <column-instance column='[Calculation_426997542975660032]' derivation='Avg' name='[avg:Calculation_426997542975660032:qk]' pivot='key' type='quantitative' />
            <column caption='Evictions' datatype='integer' name='[evictions]' role='measure' type='quantitative' />
            <column caption='Median-Property-Value' datatype='real' name='[median-property-value]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[pct-renter-occupied]' derivation='None' name='[none:pct-renter-occupied:qk]' pivot='key' type='quantitative' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Pct-Renter-Occupied' datatype='real' name='[pct-renter-occupied]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Rent-Burden' datatype='real' name='[rent-burden]' role='measure' type='quantitative' />
            <column-instance column='[median-property-value]' derivation='Sum' name='[sum:median-property-value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rent-burden]' derivation='Sum' name='[sum:rent-burden:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Latitude (generated)]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Longitude (generated)]' field-type='quantitative' max='-7029764.7177935308' min='-8956685.8788419832' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Latitude (generated)]' field-type='quantitative' max='5432512.7470962172' min='5022617.1714162147' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='tick-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#666666' />
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#f1ce63' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:median-property-value:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#333333' />
            <format attr='background-color' value='#e9f3f2' />
            <format attr='background-color' data-class='subtotal' value='#555555' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#e9f3f2' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#5555554b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#66666622' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:median-property-value:qk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:name:nk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:Calculation_426997542975660032:qk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:population:qk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:pct-renter-occupied:qk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:name:nk]' />
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:rent-burden:qk]' />
              <geometry column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Latitude (generated)]</rows>
        <cols>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ethinicity Breakdown in different Counties&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column-instance column='[pct-af-am]' derivation='Avg' name='[avg:pct-af-am:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-am-ind]' derivation='Avg' name='[avg:pct-am-ind:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-asian]' derivation='Avg' name='[avg:pct-asian:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-hispanic]' derivation='Avg' name='[avg:pct-hispanic:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-multiple]' derivation='Avg' name='[avg:pct-multiple:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-nh-pi]' derivation='Avg' name='[avg:pct-nh-pi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-other]' derivation='Avg' name='[avg:pct-other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pct-white]' derivation='Avg' name='[avg:pct-white:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[pct-renter-occupied]' derivation='None' name='[none:pct-renter-occupied:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Pct-Af-Am' datatype='real' name='[pct-af-am]' role='measure' type='quantitative' />
            <column caption='Pct-Am-Ind' datatype='real' name='[pct-am-ind]' role='measure' type='quantitative' />
            <column caption='Pct-Asian' datatype='real' name='[pct-asian]' role='measure' type='quantitative' />
            <column caption='Pct-Hispanic' datatype='real' name='[pct-hispanic]' role='measure' type='quantitative' />
            <column caption='Pct-Multiple' datatype='real' name='[pct-multiple]' role='measure' type='quantitative' />
            <column caption='Pct-Nh-Pi' datatype='real' name='[pct-nh-pi]' role='measure' type='quantitative' />
            <column caption='Pct-Other' datatype='real' name='[pct-other]' role='measure' type='quantitative' />
            <column caption='Pct-Renter-Occupied' datatype='real' name='[pct-renter-occupied]' role='measure' type='quantitative' />
            <column caption='Pct-White' datatype='real' name='[pct-white]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-af-am:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-am-ind:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-asian:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-hispanic:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-multiple:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-nh-pi:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-other:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-white:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-white:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-hispanic:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-af-am:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-asian:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-multiple:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-other:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-am-ind:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:pct-nh-pi:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Action (Name,Parent-Location,Pct-Renter-Occupied)]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[name]' member='&quot;Essex&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:pct-renter-occupied:ok]' member='27.18' />
                  <groupfilter function='member' level='[parent-location]' member='&quot;Massachusetts&quot;' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[name]' />
                <hierarchy name='[parent-location]' />
                <hierarchy name='[none:pct-renter-occupied:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]'>
            <groupfilter function='level-members' level='[none:parent-location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Action (Name,Parent-Location,Pct-Renter-Occupied)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Multiple Values]' value='47' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]' value='23' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]</rows>
        <cols>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Evictions on Yearly Basis in Every County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column caption='Evictions' datatype='integer' name='[evictions]' role='measure' type='quantitative' />
            <column-instance column='[evictions]' derivation='Sum' forecast-column-base='[sum:evictions:qk]' forecast-column-type='forecast-value' name='[fVal:sum:evictions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' forecast-column-base='[sum:population:qk]' forecast-column-type='forecast-value' name='[fVal:sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[evictions]' derivation='Sum' name='[sum:evictions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]'>
            <groupfilter function='member' level='[none:parent-location:nk]' member='&quot;Essex County, Massachusetts&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[fVal:sum:evictions:qk]' />
              <color column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[fVal:sum:population:qk]</rows>
        <cols>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of People Below Poverty Line </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column caption='Poverty Rate_cal' datatype='real' name='[Calculation_426997542989082625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([poverty-rate]/[population])' />
            </column>
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Poverty-Rate' datatype='real' name='[poverty-rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_426997542989082625]' derivation='Sum' name='[sum:Calculation_426997542989082625:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:parent-location:nk]' />
              <groupfilter function='member' level='[none:parent-location:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2012</max>
          </filter>
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</rows>
        <cols>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:Calculation_426997542989082625:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Percent of evictions based on fillings &#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column caption='Percent of evictions based on filed eviction' datatype='real' name='[Calculation_426997543013507075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([evictions]/[eviction-filings])*100' />
            </column>
            <column-instance column='[Calculation_426997543013507075]' derivation='Avg' name='[avg:Calculation_426997543013507075:qk]' pivot='key' type='quantitative' />
            <column caption='Eviction-Filings' datatype='integer' name='[eviction-filings]' role='measure' type='quantitative' />
            <column caption='Evictions' datatype='integer' name='[evictions]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[pct-renter-occupied]' derivation='None' name='[none:pct-renter-occupied:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Pct-Renter-Occupied' datatype='real' name='[pct-renter-occupied]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Action (Name,Parent-Location,Pct-Renter-Occupied)]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[name]' member='&quot;Essex&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:pct-renter-occupied:ok]' member='27.18' />
                  <groupfilter function='member' level='[parent-location]' member='&quot;Massachusetts&quot;' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[name]' />
                <hierarchy name='[parent-location]' />
                <hierarchy name='[none:pct-renter-occupied:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]'>
            <groupfilter function='level-members' level='[none:parent-location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Action (Name,Parent-Location,Pct-Renter-Occupied)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='288' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:Calculation_426997543013507075:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='14'> Percent of Evictions </run>
                <run>&#10;&#10;&lt;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:Calculation_426997543013507075:qk]&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column caption='Calculated Renter Occupied ' datatype='integer' name='[Calculation_426997543006445570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [year], [parent-location]: SUM([renter-occupied-households])}' />
            </column>
            <column-instance column='[Calculation_426997543006445570]' derivation='Avg' name='[avg:Calculation_426997543006445570:qk]' pivot='key' type='quantitative' />
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Renter-Occupied-Households' datatype='integer' name='[renter-occupied-households]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]'>
            <groupfilter function='member' level='[none:parent-location:nk]' member='&quot;Bristol County, Massachusetts&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:Calculation_426997543006445570:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Times New Roman' fontsize='14'>Calculated Renter Occupied Places</run>
                <run>&#10;&#10;&lt;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:Calculation_426997543006445570:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
          </datasources>
          <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
            <column-instance column='[median-household-income]' derivation='Avg' name='[avg:median-household-income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median-property-value]' derivation='Avg' name='[avg:median-property-value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median-gross-rent]' derivation='Median' name='[med:median-gross-rent:qk]' pivot='key' type='quantitative' />
            <column caption='Median-Gross-Rent' datatype='real' name='[median-gross-rent]' role='measure' type='quantitative' />
            <column caption='Median-Household-Income' datatype='real' name='[median-household-income]' role='measure' type='quantitative' />
            <column caption='Median-Property-Value' datatype='real' name='[median-property-value]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
            <column-instance column='[pct-renter-occupied]' derivation='None' name='[none:pct-renter-occupied:ok]' pivot='key' type='ordinal' />
            <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Pct-Renter-Occupied' datatype='real' name='[pct-renter-occupied]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Action (Name,Parent-Location,Pct-Renter-Occupied)]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[name]' member='&quot;Essex&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:pct-renter-occupied:ok]' member='27.18' />
                  <groupfilter function='member' level='[parent-location]' member='&quot;Massachusetts&quot;' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[name]' />
                <hierarchy name='[parent-location]' />
                <hierarchy name='[none:pct-renter-occupied:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]'>
            <groupfilter function='level-members' level='[none:parent-location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</column>
            <column>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Action (Name,Parent-Location,Pct-Renter-Occupied)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:median-household-income:qk]' />
              <text column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[med:median-gross-rent:qk]' />
              <text column='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:median-property-value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Times New Roman' fontsize='12'>Median-Household-Income:  $&lt;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:median-household-income:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontname='Times New Roman' fontsize='12'>Median-Gross-Rent:  $&lt;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[med:median-gross-rent:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontname='Times New Roman' fontsize='12'>Median-Property-Value: $ &lt;[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:median-property-value:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7faf0' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#f7faf0' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Massachusetts Evictions Data (Massachusetts Evictionsedited)' name='federated.1vjwtna05cn6mc12xm9vp117bhuq' />
      </datasources>
      <datasource-dependencies datasource='federated.1vjwtna05cn6mc12xm9vp117bhuq'>
        <column-instance column='[parent-location]' derivation='None' name='[none:parent-location:nk]' pivot='key' type='nominal' />
        <column caption='Parent-Location' datatype='string' name='[parent-location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='24' param='horz' type='layout-flow' w='99000' x='500' y='800'>
            <zone h='98400' id='18' param='horz' type='layout-flow' w='99000' x='500' y='800'>
              <zone h='98400' id='5' param='horz' type='layout-flow' w='99000' x='500' y='800'>
                <zone h='98400' id='3' type='layout-basic' w='99000' x='500' y='800'>
                  <zone h='41100' id='1' name='Sheet 1' w='99000' x='500' y='800'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57300' id='8' name='Sheet 2' w='51812' x='47688' y='41900'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57300' id='16' name='Sheet 3' w='47188' x='500' y='41900'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9000' id='12' name='Sheet 5' show-title='false' w='18000' x='81063' y='6800' />
        <zone h='8300' id='15' name='Sheet 6' show-title='false' w='27500' x='750' y='33000' />
        <zone h='8700' id='19' mode='dropdown' name='Sheet 3' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' values='cascading' w='10500' x='35625' y='71200' />
        <zone h='9462' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:Forecast Indicator:nk]' type='color' w='11813' x='7188' y='69385' />
        <zone h='6500' id='21' mode='dropdown' name='Sheet 6' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' values='cascading' w='10000' x='28188' y='34700' />
        <zone h='8700' id='25' name='Sheet 7' show-title='false' w='26938' x='72313' y='32800' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:median-property-value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[no 2017]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:name:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:median-property-value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' />
            <card param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[:Measure Names]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[avg:Calculation_426997542975660032:qk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:name:nk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:pct-renter-occupied:qk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:median-property-value:qk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:population:qk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[sum:rent-burden:qk]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Geometry (generated)]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Latitude (generated)]</field>
                    <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>16.129999999999999</value>
                  <value>&quot;Essex&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>27.18</value>
                  <value>3300500.0</value>
                  <value>11291.0</value>
                  <value>163.10000000000002</value>
                  <value>&quot;POLYGON((-70.9558 42.4295,-70.9541 42.4434,-71.0045 42.4295,-71.0253 42.4451,-71.0531 42.4781,-71.0358 42.5059,-71.0392 42.525,-71.074 42.5355,-71.0566 42.5737,-71.0358 42.5702,-71.034 42.5841,-71.0601 42.6085,-71.1313 42.5998,-71.2547 42.6571,-71.2391 42.6693,-71.2547 42.7371,-71.246 42.7423,-71.2235 42.7458,-71.1835 42.7371,-71.1852 42.7909,-71.1661 42.8083,-71.1279 42.8205,-71.0653 42.8066,-71.0462 42.8448,-71.0271 42.8605,-70.9141 42.8865,-70.8863 42.8831,-70.8498 42.8622,-70.8168 42.8726,-70.7907 42.7788,-70.7629 42.7197,-70.7282 42.6867,-70.6917 42.6745,-70.6378 42.6762,-70.61 42.6537,-70.6082 42.6397,-70.6656 42.5928,-70.8151 42.5476,-70.8411 42.5285,-70.8533 42.4955,-70.9228 42.4538,-70.9245 42.4295,-70.9558 42.4295))&quot;</value>
                  <value>42.633000000000003</value>
                  <value>-70.879000000000005</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight field='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5' />
        <viewpoint name='Sheet 6' />
        <viewpoint name='Sheet 7'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vjwtna05cn6mc12xm9vp117bhuq].[none:parent-location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='93' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      RaF19Lo/OMQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='87' name='Sheet 7' width='192'>
      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
      72DX6GEn/w/CsVal1rAVTAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
